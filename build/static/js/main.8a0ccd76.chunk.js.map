{"version":3,"sources":["ui_support.jsx","narwhal_web.jsx","serviceWorker.js","index.js"],"names":["chartColors","syslogSeverity","key","text","value","syslogFacility","version","serverDataEntry","serverEventsEntry","https","require","Narwhal","_useState","useState","_useState2","Object","slicedToArray","eventsReady","setEventsReady","_useState3","_useState4","logDataJSON","setLogDataJSON","_useState5","_useState6","events","setEvents","_useState7","_useState8","loading","setLoading","_useState9","_useState10","timerCounter","setTimerCounter","_useState11","_useState12","activeMenuItem","setActiveMenuItem","useEffect","requestInstance","axios","create","httpsAgent","Agent","keepAlive","rejectUnauthorized","headers","Access-Control-Allow-Origin","Access-Control-Allow-Methods","Access-Control-Allow-Headers","tick","url","counter","get","then","response","JSON","parse","request","responseText","catch","error","console","log","fetchEvents","timerID","setInterval","clearInterval","clickOnSideSectionMenuItem","e","_ref","projectTitle","react_default","a","createElement","Header","inverted","Image","src","verticalAlign","size","Content","Subheader","renderSelectedMenuSection","Grid","stretched","padded","relaxed","Column","mobile","tablet","computer","id","Row","columns","Statistic","Group","Value","total_events","Label","color","logAlertCount","logWarningsCount","logMessageCount","messages_per_second","seconds_between_messages","redis_used_memory_human","redis_total_system_memory_human","index_esm","height","chartType","loader","data","ChartData","options","title","chartArea","width","isStacked","colors","fontName","fontSize","hAxis","minValue","maxValue","vAxis","logTableRow","i","dt","length","recordDotColor","severity","Table","concat","Cell","circular","n","facility","timestamp","ip","endpoint","system","event","Segment","basic","compact","striped","selectable","HeaderCell","Body","eventsTable","stackable","textAlign","icon","Icon","name","Button","href","Divider","hidden","sideMenu","Fragment","Menu","Item","header","onClick","Sidebar","Pushable","as","animation","vertical","visible","Pusher","Dimmer","active","Loader","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","narwhal_web","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8a0ccd76.chunk.js","sourcesContent":["export const chartColors = [\n  '#8E3642',\n  '#A42150',\n  '#BC3148',\n  '#DA1E45',\n  '#F5D03E',\n  '#7AA543',\n  '#6C99D7',\n  '#CCD3D9',\n];\n\n// RFC 5424\n\nexport const syslogSeverity = [\n  { key: 0, text: 'Emergency', value: 0 },\n  { key: 1, text: 'Alert', value: 1 },\n  { key: 2, text: 'Critical', value: 2 },\n  { key: 3, text: 'Error', value: 3 },\n  { key: 4, text: 'Warning', value: 4 },\n  { key: 5, text: 'Notice', value: 5 },\n  { key: 6, text: 'Informational', value: 6 },\n  { key: 7, text: 'Debug', value: 7 },\n];\n\nexport const syslogFacility = [\n  { key: 0, text: 'kern', value: 0 },\n  { key: 1, text: 'user', value: 1 },\n  { key: 2, text: 'mail', value: 2 },\n  { key: 3, text: 'daemon', value: 3 },\n  { key: 4, text: 'auth', value: 4 },\n  { key: 5, text: 'syslog', value: 5 },\n  { key: 6, text: 'lpr', value: 6 },\n  { key: 7, text: 'news', value: 7 },\n  { key: 8, text: 'uucp', value: 8 },\n  { key: 9, text: 'cron', value: 9 },\n  { key: 10, text: 'authpriv', value: 10 },\n  { key: 11, text: 'ftp', value: 11 },\n  { key: 12, text: 'ntp', value: 12 },\n  { key: 13, text: 'security', value: 13 },\n  { key: 14, text: 'console', value: 14 },\n  { key: 15, text: 'solaris-cron', value: 15 },\n  { key: 16, text: 'local0', value: 16 },\n  { key: 17, text: 'local1', value: 17 },\n  { key: 18, text: 'local2', value: 18 },\n  { key: 19, text: 'local3', value: 19 },\n  { key: 20, text: 'local4', value: 20 },\n  { key: 21, text: 'local5', value: 21 },\n  { key: 22, text: 'local6', value: 22 },\n  { key: 23, text: 'local7', value: 23 },\n];\n\nexport const refreshOptions = [\n  { key: 3, text: '3 seconds', value: 3 },\n  { key: 5, text: '5 seconds', value: 5 },\n  { key: 10, text: '10 seconds', value: 10 },\n  { key: 20, text: '20 seconds', value: 20 },\n  { key: 40, text: '40 seconds', value: 40 },\n  { key: 60, text: '60 seconds', value: 60 },\n];\n","// import { ResponsiveBar } from '@nivo/bar';\nimport Chart from 'react-google-charts';\n// import { ResponsiveWaffle } from '@nivo/waffle';\n// import { ResponsiveSwarmPlot } from '@nivo/swarmplot';\n// import { ResponsiveScatterPlot } from '@nivo/scatterplot';\n// import { VictoryScatter, VictoryChart, VictoryAxis } from 'victory';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  Dimmer,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Label,\n  Loader,\n  Menu,\n  Segment,\n  Sidebar,\n  Statistic,\n  Table,\n} from 'semantic-ui-react';\nimport { chartColors, syslogFacility, syslogSeverity } from './ui_support';\n\nconst version = 'ver.0.2';\nconst serverDataEntry = 'https://localhost:8000/server_data';\nconst serverEventsEntry = 'https://localhost:8000/server_events';\n// const serverDataEntry = '/server_data';\n// const serverEventsEntry = '/server_events';\n\nconst https = require('https');\n\nfunction Narwhal() {\n  const [eventsReady, setEventsReady] = useState(false);\n  const [logDataJSON, setLogDataJSON] = useState();\n  const [events, setEvents] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [timerCounter, setTimerCounter] = useState(0);\n\n  const [activeMenuItem, setActiveMenuItem] = useState('dashboard');\n\n  useEffect(() => {\n    const requestInstance = axios.create({\n      httpsAgent: new https.Agent({\n        keepAlive: true,\n        rejectUnauthorized: false,\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'PUT, GET, POST, DELETE, OPTIONS',\n          'Access-Control-Allow-Headers': 'Origin, Accept, Content-Type, X-Requested-With',\n        },\n      }),\n    });\n\n    function fetchData(url) {\n      requestInstance\n        .get(url)\n        .then((response) => {\n          setLogDataJSON(JSON.parse(response.request.responseText));\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n\n    function fetchEvents(url) {\n      requestInstance\n        .get(url)\n        .then((response) => {\n          setEvents(JSON.parse(response.request.responseText));\n          setEventsReady(true);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n\n    function tick() {\n      let counter = timerCounter + 1;\n      if (counter === 1) {\n        setLoading(true);\n        fetchData(serverDataEntry);\n        fetchEvents(serverEventsEntry);\n        if (logDataJSON) {\n          setLoading(false);\n        }\n      }\n      if (counter === 30) {\n        counter = 0;\n      }\n      setTimerCounter(counter);\n    }\n\n    const timerID = setInterval(() => tick(), 1000);\n\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  });\n\n  const clickOnSideSectionMenuItem = (e, { value }) => {\n    setActiveMenuItem(value);\n  };\n\n  const noticeColor = 'green';\n  const warningColor = 'yellow';\n  const alertColor = 'red';\n\n  const projectTitle = (\n    <Header inverted>\n      <Image src=\"/static/img/nlogo.png\" verticalAlign=\"middle\" size=\"medium\" />\n      <Header.Content>\n        Narwhal\n        <Header.Subheader>{version}</Header.Subheader>\n      </Header.Content>\n    </Header>\n  );\n\n  function eventsTable() {\n    let logTableRow = [];\n    if (eventsReady === true) {\n      for (let i = 0; i < events.dt.length; i += 1) {\n        let recordDotColor = 'yellow';\n        if (events.severity[i] < 4) {\n          recordDotColor = 'red';\n        }\n        if (events.severity[i] === 5) {\n          recordDotColor = 'green';\n        }\n        if (events.severity[i] === 6) {\n          recordDotColor = 'blue';\n        }\n        if (events.severity[i] === 7) {\n          recordDotColor = 'grey';\n        }\n        logTableRow[i] = (\n          <Table.Row key={`eventTableRow${i}`}>\n            <Table.Cell>\n              <Label circular color={recordDotColor}>\n                <b>{events.n[i]}</b>\n              </Label>\n            </Table.Cell>\n            <Table.Cell>\n              <Header size=\"tiny\">\n                <Header.Content>\n                  {syslogSeverity[events.severity[i]].text}\n                  <Header.Subheader>{syslogFacility[events.facility[i]].text}</Header.Subheader>\n                </Header.Content>\n              </Header>\n            </Table.Cell>\n            <Table.Cell>\n              <Header size=\"tiny\">\n                <Header.Content>\n                  {events.timestamp[i]}\n                  <Header.Subheader>{events.dt[i]}</Header.Subheader>\n                </Header.Content>\n              </Header>\n            </Table.Cell>\n            <Table.Cell>\n              <Header size=\"tiny\">\n                <Header.Content>\n                  {events.ip[i]}\n                  <Header.Subheader>{events.endpoint[i]}</Header.Subheader>\n                </Header.Content>\n              </Header>\n            </Table.Cell>\n            <Table.Cell>\n              <Header size=\"tiny\">\n                <Header.Content>\n                  {events.system[i]}\n                  <Header.Subheader>{events.event[i]}</Header.Subheader>\n                </Header.Content>\n              </Header>\n            </Table.Cell>\n          </Table.Row>\n        );\n      }\n    } else {\n      logTableRow = null;\n    }\n    return (\n      <Segment basic padded={false}>\n        <Table compact=\"very\" striped selectable size=\"small\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell> N </Table.HeaderCell>\n              <Table.HeaderCell> Sev/Facility </Table.HeaderCell>\n              <Table.HeaderCell> Timestamp/Received at </Table.HeaderCell>\n              <Table.HeaderCell> Source/Endpoint </Table.HeaderCell>\n              <Table.HeaderCell> System / Message </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>{logTableRow}</Table.Body>\n        </Table>\n      </Segment>\n    );\n  }\n\n  if (!loading) {\n    let renderSelectedMenuSection = '';\n\n    if (activeMenuItem === 'dashboard') {\n      renderSelectedMenuSection = (\n        <Grid stretched padded relaxed=\"very\">\n          <Grid.Column mobile={16} tablet={13} computer={14} id=\"content\">\n            <Grid.Row>\n              <Grid padded relaxed columns=\"equal\">\n                <Grid.Column>\n                  <Statistic.Group size=\"small\">\n                    <Statistic>\n                      <Statistic.Value>{logDataJSON.total_events}</Statistic.Value>\n                      <Statistic.Label> log entries </Statistic.Label>\n                    </Statistic>\n                    <Statistic color={alertColor}>\n                      <Statistic.Value>{logDataJSON.logAlertCount}</Statistic.Value>\n                      <Statistic.Label> alerts </Statistic.Label>\n                    </Statistic>\n                    <Statistic color={warningColor}>\n                      <Statistic.Value>{logDataJSON.logWarningsCount}</Statistic.Value>\n                      <Statistic.Label> warnings </Statistic.Label>\n                    </Statistic>\n                    <Statistic color={noticeColor}>\n                      <Statistic.Value>{logDataJSON.logMessageCount}</Statistic.Value>\n                      <Statistic.Label> messages </Statistic.Label>\n                    </Statistic>\n                  </Statistic.Group>\n                </Grid.Column>\n                <Grid.Column>\n                  <Statistic.Group size=\"small\">\n                    <Statistic>\n                      <Statistic.Value>{logDataJSON.messages_per_second}</Statistic.Value>\n                      <Statistic.Label> msg / sec </Statistic.Label>\n                    </Statistic>\n                    <Statistic>\n                      <Statistic.Value>{logDataJSON.seconds_between_messages}</Statistic.Value>\n                      <Statistic.Label> avg.interval, sec. </Statistic.Label>\n                    </Statistic>\n                  </Statistic.Group>\n                </Grid.Column>\n                <Grid.Column>\n                  <Statistic.Group size=\"small\">\n                    <Statistic>\n                      <Statistic.Value>{logDataJSON.redis_used_memory_human}</Statistic.Value>\n                      <Statistic.Label> used redis memory </Statistic.Label>\n                    </Statistic>\n                    <Statistic>\n                      <Statistic.Value>\n                        {logDataJSON.redis_total_system_memory_human}\n                      </Statistic.Value>\n                      <Statistic.Label> total redis memory </Statistic.Label>\n                    </Statistic>\n                  </Statistic.Group>\n                </Grid.Column>\n              </Grid>\n            </Grid.Row>\n            <Grid.Row>\n              <Chart\n                height=\"80px\"\n                chartType=\"BarChart\"\n                loader={<div>Loading Chart</div>}\n                data={[\n                  [\n                    '',\n                    syslogSeverity[0].text,\n                    syslogSeverity[1].text,\n                    syslogSeverity[2].text,\n                    syslogSeverity[3].text,\n                    syslogSeverity[4].text,\n                    syslogSeverity[5].text,\n                    syslogSeverity[6].text,\n                    syslogSeverity[7].text,\n                  ],\n                  [\n                    '',\n                    logDataJSON.ChartData[0],\n                    logDataJSON.ChartData[1],\n                    logDataJSON.ChartData[2],\n                    logDataJSON.ChartData[3],\n                    logDataJSON.ChartData[4],\n                    logDataJSON.ChartData[5],\n                    logDataJSON.ChartData[6],\n                    logDataJSON.ChartData[7],\n                  ],\n                ]}\n                options={{\n                  title: 'Total amount of messages by severity',\n                  chartArea: { height: '40%', width: '90%' },\n                  isStacked: true,\n                  colors: chartColors,\n                  fontName: 'Lato',\n                  fontSize: 12,\n                  hAxis: {\n                    minValue: 0,\n                    maxValue: logDataJSON.total_events,\n                  },\n                  vAxis: {},\n                }}\n              />\n            </Grid.Row>\n            <Grid.Row>{eventsTable()}</Grid.Row>\n          </Grid.Column>\n        </Grid>\n      );\n    }\n    if (activeMenuItem === 'data') {\n      renderSelectedMenuSection = (\n        <Grid columns={4} stackable textAlign=\"center\" stretched padded relaxed=\"very\">\n          <Grid.Row>\n            <Header padded>Export events data as</Header>\n          </Grid.Row>\n          <Grid.Row verticalAlign=\"middle\">\n            <Grid.Column />\n            <Grid.Column>\n              <Header icon>\n                <Icon name=\"file excel outline\" />\n                CSV\n              </Header>\n              <Button>\n                <a href=\"/csv_alerts\">Alerts only</a>\n              </Button>\n              <Divider hidden />\n              <Button>\n                <a href=\"/csv_all\">All events</a>\n              </Button>\n            </Grid.Column>\n            <Grid.Column>\n              <Header icon>\n                <Icon name=\"file code outline\" />\n                JSON\n              </Header>\n              <Button>\n                <a href=\"/json_alerts\">Alerts only</a>\n              </Button>\n              <Divider hidden />\n              <Button>\n                <a href=\"/json_all\">All events</a>\n              </Button>\n            </Grid.Column>\n            <Grid.Column />\n          </Grid.Row>\n        </Grid>\n      );\n    }\n    const sideMenu = (\n      <React.Fragment>\n        <Menu.Item header>{projectTitle}</Menu.Item>\n        <Menu.Item header value=\"dashboard\" onClick={clickOnSideSectionMenuItem}>\n          <Icon name=\"heartbeat\" size=\"large\" />\n          Dashboard\n        </Menu.Item>\n        <Menu.Item header value=\"data\" onClick={clickOnSideSectionMenuItem}>\n          <Icon name=\"book\" size=\"large\" />\n          Data export\n        </Menu.Item>\n      </React.Fragment>\n    );\n    return (\n      <Sidebar.Pushable as={Segment}>\n        <Sidebar as={Menu} animation=\"slide along\" inverted vertical visible width=\"thin\">\n          {sideMenu}\n        </Sidebar>\n        <Sidebar.Pusher>\n          <Segment basic>{renderSelectedMenuSection}</Segment>\n        </Sidebar.Pusher>\n      </Sidebar.Pushable>\n    );\n  }\n  return (\n    <React.Fragment>\n      <Dimmer inverted active={loading}>\n        <Loader size=\"massive\"> Loading </Loader>\n      </Dimmer>\n    </React.Fragment>\n  );\n}\n\nexport default Narwhal;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport Narwhal from './narwhal_web.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Narwhal />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}