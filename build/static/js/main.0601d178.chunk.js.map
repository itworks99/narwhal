{"version":3,"sources":["ui_support.jsx","narwhal_web.jsx","serviceWorker.js","index.js"],"names":["chartColors","syslogSeverity","key","text","value","syslogFacility","version","serverDataEntry","serverEventsEntry","https","require","Narwhal","_useState","useState","_useState2","Object","slicedToArray","eventsReady","setEventsReady","_useState3","_useState4","logDataJSON","setLogDataJSON","_useState5","_useState6","events","setEvents","_useState7","_useState8","loading","setLoading","_useState9","_useState10","timerCounter","setTimerCounter","_useState11","_useState12","activeMenuItem","setActiveMenuItem","useEffect","requestInstance","axios","create","httpsAgent","Agent","keepAlive","rejectUnauthorized","headers","Access-Control-Allow-Origin","Access-Control-Allow-Methods","Access-Control-Allow-Headers","tick","url","counter","get","then","response","JSON","parse","request","responseText","catch","error","console","log","fetchEvents","timerID","setInterval","clearInterval","clickOnSideSectionMenuItem","e","_ref","projectTitle","react_default","a","createElement","Header","inverted","Image","src","verticalAlign","size","Content","Subheader","waffleChartData","id","label","sev0","sev1","sev2","sev3","sev4","sev5","sev6","sev7","lineChartData","name","chartDatasev0","data","chartDatasev1","chartDatasev2","chartDatasev3","chartDatasev4","chartDatasev5","chartDatasev6","chartDatasev7","renderSelectedMenuSection","logAlertCount","logMessageCount","Grid","stretched","padded","relaxed","Column","mobile","tablet","computer","Row","columns","Statistic","Group","Value","total_events","Label","color","style","height","waffle","total","rows","padding","margin","top","right","bottom","left","colors","colorBy","borderColor","fillDirection","animate","messages_per_second","seconds_between_messages","redis_used_memory_human","redis_total_system_memory_human","react_chartkick_esm","xmin","firstDataTimestamp","download","background","curve","legend","library","animation","duration","hover","animationDuration","responsiveAnimationDuration","scales","yAxes","display","ticks","min","stepSize","labels","boxWidth","defaultFontFamily","elements","point","radius","line","tension","logTableRow","i","dt","length","recordDotColor","severity","Table","concat","Cell","circular","n","facility","timestamp","ip","endpoint","system","event","Segment","basic","compact","striped","selectable","HeaderCell","Body","eventsTable","stackable","textAlign","icon","Icon","Button","href","Divider","hidden","sideMenu","Fragment","Menu","Item","header","onClick","Sidebar","Pushable","as","vertical","visible","width","Pusher","Dimmer","active","Loader","Boolean","window","location","hostname","match","ReactDOM","render","narwhal_web","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0601d178.chunk.js","sourcesContent":["export const chartColors = [\n  '#8E3642',\n  '#A42150',\n  '#BC3148',\n  '#DA1E45',\n  '#F5D03E',\n  '#7AA543',\n  '#6C99D7 ',\n  '#CCD3D9',\n];\n\n// RFC 5424\n\nexport const syslogSeverity = [\n  { key: 0, text: 'Emergency', value: 0 },\n  { key: 1, text: 'Alert', value: 1 },\n  { key: 2, text: 'Critical', value: 2 },\n  { key: 3, text: 'Error', value: 3 },\n  { key: 4, text: 'Warning', value: 4 },\n  { key: 5, text: 'Notice', value: 5 },\n  { key: 6, text: 'Informational', value: 6 },\n  { key: 7, text: 'Debug', value: 7 },\n];\n\nexport const syslogFacility = [\n  { key: 0, text: 'kern', value: 0 },\n  { key: 1, text: 'user', value: 1 },\n  { key: 2, text: 'mail', value: 2 },\n  { key: 3, text: 'daemon', value: 3 },\n  { key: 4, text: 'auth', value: 4 },\n  { key: 5, text: 'syslog', value: 5 },\n  { key: 6, text: 'lpr', value: 6 },\n  { key: 7, text: 'news', value: 7 },\n  { key: 8, text: 'uucp', value: 8 },\n  { key: 9, text: 'cron', value: 9 },\n  { key: 10, text: 'authpriv', value: 10 },\n  { key: 11, text: 'ftp', value: 11 },\n  { key: 12, text: 'ntp', value: 12 },\n  { key: 13, text: 'security', value: 13 },\n  { key: 14, text: 'console', value: 14 },\n  { key: 15, text: 'solaris-cron', value: 15 },\n  { key: 16, text: 'local0', value: 16 },\n  { key: 17, text: 'local1', value: 17 },\n  { key: 18, text: 'local2', value: 18 },\n  { key: 19, text: 'local3', value: 19 },\n  { key: 20, text: 'local4', value: 20 },\n  { key: 21, text: 'local5', value: 21 },\n  { key: 22, text: 'local6', value: 22 },\n  { key: 23, text: 'local7', value: 23 },\n];\n\nexport const refreshOptions = [\n  { key: 3, text: '3 seconds', value: 3 },\n  { key: 5, text: '5 seconds', value: 5 },\n  { key: 10, text: '10 seconds', value: 10 },\n  { key: 20, text: '20 seconds', value: 20 },\n  { key: 40, text: '40 seconds', value: 40 },\n  { key: 60, text: '60 seconds', value: 60 },\n];\n\nexport const dashboardDefaultTimePeriodOptions = [\n  { key: 1, text: '1 hour', value: 1 },\n  { key: 4, text: '4 hours', value: 4 },\n  { key: 6, text: '6 hours', value: 6 },\n  { key: 12, text: '12 hours', value: 12 },\n  { key: 24, text: '24 hours', value: 24 },\n  { key: 48, text: '48 hours', value: 48 },\n];\n\nexport const dashboardDefaultZoomOptions = [\n  { key: 5, text: '5 minutes', value: 5 },\n  { key: 15, text: '15 minutes', value: 15 },\n  { key: 30, text: '30 minutes', value: 30 },\n  { key: 1, text: '1 hour', value: 60 },\n  { key: 3, text: '3 hours', value: 180 },\n  { key: 6, text: '6 hours', value: 360 },\n];\n","import { ResponsiveWaffle } from '@nivo/waffle';\nimport { LineChart } from 'react-chartkick';\nimport 'chart.js';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  Dimmer,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Label,\n  Loader,\n  Menu,\n  Segment,\n  Sidebar,\n  Statistic,\n  Table,\n} from 'semantic-ui-react';\nimport { chartColors, syslogFacility, syslogSeverity } from './ui_support';\n\nconst version = 'ver.0.2';\nconst serverDataEntry = 'https://localhost:8000/server_data';\nconst serverEventsEntry = 'https://localhost:8000/server_events';\n// const serverDataEntry = '/server_data';\n// const serverEventsEntry = '/server_events';\n\nconst https = require('https');\n\nfunction Narwhal() {\n  const [eventsReady, setEventsReady] = useState(false);\n  const [logDataJSON, setLogDataJSON] = useState();\n  const [events, setEvents] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [timerCounter, setTimerCounter] = useState(0);\n\n  const [activeMenuItem, setActiveMenuItem] = useState('dashboard');\n\n  useEffect(() => {\n    const requestInstance = axios.create({\n      httpsAgent: new https.Agent({\n        keepAlive: true,\n        rejectUnauthorized: false,\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'PUT, GET, POST, DELETE, OPTIONS',\n          'Access-Control-Allow-Headers': 'Origin, Accept, Content-Type, X-Requested-With',\n        },\n      }),\n    });\n\n    function fetchData(url) {\n      requestInstance\n        .get(url)\n        .then((response) => {\n          setLogDataJSON(JSON.parse(response.request.responseText));\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n\n    function fetchEvents(url) {\n      requestInstance\n        .get(url)\n        .then((response) => {\n          setEvents(JSON.parse(response.request.responseText));\n          setEventsReady(true);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n\n    function tick() {\n      let counter = timerCounter + 1;\n      if (counter === 1) {\n        setLoading(true);\n        fetchData(serverDataEntry);\n        fetchEvents(serverEventsEntry);\n        if (logDataJSON) {\n          setLoading(false);\n        }\n      }\n      if (counter === 30) {\n        counter = 0;\n      }\n      setTimerCounter(counter);\n    }\n\n    const timerID = setInterval(() => tick(), 1000);\n\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  });\n\n  const clickOnSideSectionMenuItem = (e, { value }) => {\n    setActiveMenuItem(value);\n  };\n\n  const noticeColor = 'green';\n  const warningColor = 'yellow';\n  const alertColor = 'red';\n\n  const projectTitle = (\n    <Header inverted>\n      <Image src=\"/static/img/nlogo.png\" verticalAlign=\"middle\" size=\"medium\" />\n      <Header.Content>\n        Narwhal\n        <Header.Subheader>{version}</Header.Subheader>\n      </Header.Content>\n    </Header>\n  );\n\n  function eventsTable() {\n    let logTableRow = [];\n    if (eventsReady === true) {\n      for (let i = 0; i < events.dt.length; i += 1) {\n        let recordDotColor = 'yellow';\n        if (events.severity[i] < 4) {\n          recordDotColor = 'red';\n        }\n        if (events.severity[i] === 5) {\n          recordDotColor = 'green';\n        }\n        if (events.severity[i] === 6) {\n          recordDotColor = 'blue';\n        }\n        if (events.severity[i] === 7) {\n          recordDotColor = 'grey';\n        }\n        logTableRow[i] = (\n          <Table.Row key={`eventTableRow${i}`}>\n            <Table.Cell>\n              <Label circular color={recordDotColor}>\n                <b>{events.n[i]}</b>\n              </Label>\n            </Table.Cell>\n            <Table.Cell>\n              <Header size=\"tiny\">\n                <Header.Content>\n                  {syslogSeverity[events.severity[i]].text}\n                  <Header.Subheader>{syslogFacility[events.facility[i]].text}</Header.Subheader>\n                </Header.Content>\n              </Header>\n            </Table.Cell>\n            <Table.Cell>\n              <Header size=\"tiny\">\n                <Header.Content>\n                  {events.timestamp[i]}\n                  <Header.Subheader>{events.dt[i]}</Header.Subheader>\n                </Header.Content>\n              </Header>\n            </Table.Cell>\n            <Table.Cell>\n              <Header size=\"tiny\">\n                <Header.Content>\n                  {events.ip[i]}\n                  <Header.Subheader>{events.endpoint[i]}</Header.Subheader>\n                </Header.Content>\n              </Header>\n            </Table.Cell>\n            <Table.Cell>\n              <Header size=\"tiny\">\n                <Header.Content>\n                  {events.system[i]}\n                  <Header.Subheader>{events.event[i]}</Header.Subheader>\n                </Header.Content>\n              </Header>\n            </Table.Cell>\n          </Table.Row>\n        );\n      }\n    } else {\n      logTableRow = null;\n    }\n    return (\n      <Segment basic padded={false}>\n        <Table compact=\"very\" striped selectable size=\"small\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell> N </Table.HeaderCell>\n              <Table.HeaderCell> Sev/Facility </Table.HeaderCell>\n              <Table.HeaderCell> Timestamp/Received at </Table.HeaderCell>\n              <Table.HeaderCell> Source/Endpoint </Table.HeaderCell>\n              <Table.HeaderCell> System / Message </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>{logTableRow}</Table.Body>\n        </Table>\n      </Segment>\n    );\n  }\n  if (!loading) {\n    const waffleChartData = [\n      {\n        id: syslogSeverity[0].key,\n        label: syslogSeverity[0].text,\n        value: logDataJSON.sev0,\n      },\n      {\n        id: syslogSeverity[1].key,\n        label: syslogSeverity[1].text,\n        value: logDataJSON.sev1,\n      },\n      {\n        id: syslogSeverity[2].key,\n        label: syslogSeverity[2].text,\n        value: logDataJSON.sev2,\n      },\n      {\n        id: syslogSeverity[3].key,\n        label: syslogSeverity[3].text,\n        value: logDataJSON.sev3,\n      },\n      {\n        id: syslogSeverity[4].key,\n        label: syslogSeverity[4].text,\n        value: logDataJSON.sev4,\n      },\n      {\n        id: syslogSeverity[5].key,\n        label: syslogSeverity[5].text,\n        value: logDataJSON.sev5,\n      },\n      {\n        id: syslogSeverity[6].key,\n        label: syslogSeverity[6].text,\n        value: logDataJSON.sev6,\n      },\n      {\n        id: syslogSeverity[7].key,\n        label: syslogSeverity[7].text,\n        value: logDataJSON.sev7,\n      },\n    ];\n\n    const lineChartData = [\n      {\n        name: logDataJSON.chartDatasev0.name,\n        data: logDataJSON.chartDatasev0.data,\n      },\n      {\n        name: logDataJSON.chartDatasev1.name,\n        data: logDataJSON.chartDatasev1.data,\n      },\n      {\n        name: logDataJSON.chartDatasev2.name,\n        data: logDataJSON.chartDatasev2.data,\n      },\n      {\n        name: logDataJSON.chartDatasev3.name,\n        data: logDataJSON.chartDatasev3.data,\n      },\n      {\n        name: logDataJSON.chartDatasev4.name,\n        data: logDataJSON.chartDatasev4.data,\n      },\n      {\n        name: logDataJSON.chartDatasev5.name,\n        data: logDataJSON.chartDatasev5.data,\n      },\n      {\n        name: logDataJSON.chartDatasev6.name,\n        data: logDataJSON.chartDatasev6.data,\n      },\n      {\n        name: logDataJSON.chartDatasev7.name,\n        data: logDataJSON.chartDatasev7.data,\n      },\n    ];\n\n    let renderSelectedMenuSection = '';\n\n    const logAlertCount = logDataJSON.sev0 + logDataJSON.sev1 + logDataJSON.sev2 + logDataJSON.sev3;\n    const logMessageCount = logDataJSON.sev5 + logDataJSON.sev6 + logDataJSON.sev7;\n\n    if (activeMenuItem === 'dashboard') {\n      renderSelectedMenuSection = (\n        <Grid stretched padded relaxed=\"very\">\n          <Grid.Column mobile={16} tablet={13} computer={14} id=\"content\">\n            <Grid.Row>\n              <Grid padded relaxed columns=\"equal\">\n                <Grid.Column>\n                  <Statistic.Group size=\"mini\">\n                    <Statistic>\n                      <Statistic.Value>{logDataJSON.total_events}</Statistic.Value>\n                      <Statistic.Label> log entries </Statistic.Label>\n                    </Statistic>\n                    <Statistic color={alertColor}>\n                      <Statistic.Value>{logAlertCount}</Statistic.Value>\n                      <Statistic.Label> alerts </Statistic.Label>\n                    </Statistic>\n                    <Statistic color={warningColor}>\n                      <Statistic.Value>{logDataJSON.sev4}</Statistic.Value>\n                      <Statistic.Label> warnings </Statistic.Label>\n                    </Statistic>\n                    <Statistic color={noticeColor}>\n                      <Statistic.Value>{logMessageCount}</Statistic.Value>\n                      <Statistic.Label> messages </Statistic.Label>\n                    </Statistic>\n                  </Statistic.Group>\n                </Grid.Column>\n                <Grid.Column>\n                  <div\n                    style={{\n                      height: 40,\n                    }}\n                  >\n                    <ResponsiveWaffle\n                      data={waffleChartData}\n                      total={logMessageCount}\n                      rows={4}\n                      columns={40}\n                      padding={2}\n                      margin={{\n                        top: 2,\n                        right: 2,\n                        bottom: 2,\n                        left: 2,\n                      }}\n                      colors={chartColors}\n                      colorBy=\"id\"\n                      borderColor=\"inherit\"\n                      fillDirection=\"top\"\n                      animate={false}\n                    />\n                  </div>\n                </Grid.Column>\n                <Grid.Column>\n                  <Statistic.Group size=\"mini\">\n                    <Statistic>\n                      <Statistic.Value>{logDataJSON.messages_per_second}</Statistic.Value>\n                      <Statistic.Label> msg / sec </Statistic.Label>\n                    </Statistic>\n                    <Statistic>\n                      <Statistic.Value>{logDataJSON.seconds_between_messages}</Statistic.Value>\n                      <Statistic.Label> avg.interval, sec. </Statistic.Label>\n                    </Statistic>\n                  </Statistic.Group>\n                </Grid.Column>\n                <Grid.Column>\n                  <Statistic.Group size=\"mini\">\n                    <Statistic>\n                      <Statistic.Value>{logDataJSON.redis_used_memory_human}</Statistic.Value>\n                      <Statistic.Label> used redis memory </Statistic.Label>\n                    </Statistic>\n                    <Statistic>\n                      <Statistic.Value>\n                        {logDataJSON.redis_total_system_memory_human}\n                      </Statistic.Value>\n                      <Statistic.Label> total redis memory </Statistic.Label>\n                    </Statistic>\n                  </Statistic.Group>\n                </Grid.Column>\n              </Grid>\n            </Grid.Row>\n            <Grid.Row>\n              <LineChart\n                xmin={logDataJSON.firstDataTimestamp}\n                data={lineChartData}\n                download={{ background: '#fff' }}\n                colors={chartColors}\n                curve\n                legend=\"bottom\"\n                library={{\n                  animation: { duration: 0 },\n                  hover: { animationDuration: 0 },\n                  responsiveAnimationDuration: 0,\n                  scales: {\n                    yAxes: [\n                      {\n                        display: true,\n                        ticks: {\n                          min: 0,\n                          stepSize: 25,\n                        },\n                      },\n                    ],\n                  },\n                  legend: {\n                    labels: {\n                      boxWidth: 12,\n                      defaultFontFamily: 'Lato',\n                    },\n                  },\n                  elements: {\n                    point: { radius: 1 },\n                    line: {\n                      tension: 0, // disables bezier curves\n                    },\n                  },\n                }}\n              />\n            </Grid.Row>\n            <Grid.Row>{eventsTable()}</Grid.Row>\n          </Grid.Column>\n        </Grid>\n      );\n    }\n    if (activeMenuItem === 'data') {\n      renderSelectedMenuSection = (\n        <Grid columns={4} stackable textAlign=\"center\" stretched padded relaxed=\"very\">\n          <Grid.Row>\n            <Header padded>Export events data as</Header>\n          </Grid.Row>\n          <Grid.Row verticalAlign=\"middle\">\n            <Grid.Column />\n            <Grid.Column>\n              <Header icon>\n                <Icon name=\"file excel outline\" />\n                CSV\n              </Header>\n              <Button>\n                <a href=\"/csv_alerts\">Alerts only</a>\n              </Button>\n              <Divider hidden />\n              <Button>\n                <a href=\"/csv_all\">All events</a>\n              </Button>\n            </Grid.Column>\n            <Grid.Column>\n              <Header icon>\n                <Icon name=\"file code outline\" />\n                JSON\n              </Header>\n              <Button>\n                <a href=\"/json_alerts\">Alerts only</a>\n              </Button>\n              <Divider hidden />\n              <Button>\n                <a href=\"/json_all\">All events</a>\n              </Button>\n            </Grid.Column>\n            <Grid.Column />\n          </Grid.Row>\n        </Grid>\n      );\n    }\n    const sideMenu = (\n      <React.Fragment>\n        <Menu.Item header>{projectTitle}</Menu.Item>\n        <Menu.Item header value=\"dashboard\" onClick={clickOnSideSectionMenuItem}>\n          <Icon name=\"heartbeat\" size=\"large\" />\n          Dashboard\n        </Menu.Item>\n        <Menu.Item header value=\"data\" onClick={clickOnSideSectionMenuItem}>\n          <Icon name=\"book\" size=\"large\" />\n          Data export\n        </Menu.Item>\n      </React.Fragment>\n    );\n    return (\n      <Sidebar.Pushable as={Segment}>\n        <Sidebar as={Menu} animation=\"slide along\" inverted vertical visible width=\"thin\">\n          {sideMenu}\n        </Sidebar>\n        <Sidebar.Pusher>\n          <Segment basic>{renderSelectedMenuSection}</Segment>\n        </Sidebar.Pusher>\n      </Sidebar.Pushable>\n    );\n  }\n  return (\n    <React.Fragment>\n      <Dimmer inverted active={loading}>\n        <Loader size=\"massive\"> Loading </Loader>\n      </Dimmer>\n    </React.Fragment>\n  );\n}\n\nexport default Narwhal;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport Narwhal from './narwhal_web.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Narwhal />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}